#!/bin/bash
dateStart=$(date "+%F")
now=$(date "+%s")
backupDir="/home/user"
backupSrc="/home/user/source"
backupDest="/home/user/restore"
backupReport="/home/user/backup-report"
flag="true"
diffMin=0
expireTime=7
nameMin=""
echo "" > ./.newFiles
echo "" > ./.existsFiles
for dir in $backupDir/*; do
	if [ -d $dir ]; then
		if [[ $dir =~ Backup-[0-9]{4}-[0-9]{2}-[0-9]{2} ]]; then
			time=$(echo $(basename $dir) | awk '{ print substr($0,8) }' | sed 's/-/\//g')
			time=$(date -d "$time" "+%s")
			let diff=$now-$time
			let diff=$diff/60/60/24
			if [[ $flag == "true" ]]; then
				diffMin=$diff
				nameMin=$dir
				flag="false"
			else
				if [[ $diff -le $diffMin ]]; then
					diffMin=$diff
					nameMin=$dir
				fi
			fi						
		fi
	fi
done
if [[ $flag == "true" ]]; then
	echo "There are no previously backups!"
	exit 0
else 
	echo "Restore from last previous backup: $nameMin ($diffMin days ago)"
	find $nameMin/* -type d | while read j; do
		dest=$(echo $j | awk '{ print substr($1,30) }')
		mkdir -p $backupDest/$dest
	done
	find $nameMin/* -type f | while read j; do
		dest=$(echo $j | awk '{ print substr($1,30) }')
		if [[ $dest =~ [a-zA-Z0-9]{1,}[.]{1}[0-9]{4}-[0-9]{2}-[0-9]{2} ]]; then
			:
		else
			cp -v -f $j $backupDest/$dest > ./.temp
		fi
	done
	rm ./.temp
	echo "Restore Complete"
fi
