#!/bin/bash
dateStart=$(date "+%F")
now=$(date "+%s")
backupDir="/home/user"
backupSrc="/home/user/source"
backupReport="/home/user/backup-report"
flag="true"
diffMin=0
expireTime=7
nameMin=""
echo "" > ./.newFiles
echo "" > ./.existsFiles
for dir in $backupDir/*; do
	if [ -d $dir ]; then
		if [[ $dir =~ Backup-[0-9]{4}-[0-9]{2}-[0-9]{2} ]]; then
			time=$(echo $(basename $dir) | awk '{ print substr($0,8) }' | sed 's/-/\//g')
			time=$(date -d "$time" "+%s")
			let diff=$now-$time
			let diff=$diff/60/60/24
			if [[ $flag == "true" ]]; then
				diffMin=$diff
				nameMin=$dir
				flag="false"
			else
				if [[ $diff -le $diffMin ]]; then
					diffMin=$diff
					nameMin=$dir
				fi
			fi						
		fi
	fi
done
if [[ $flag == "true" ]]; then
	echo "There are no previously backups!"
	now=Backup-$dateStart
	mkdir -p $backupDir/$now
	cp -r -f -v $backupSrc/* $backupDir/$now >> $backupReport
	echo "$now created"
	echo "-------------------------------------------------------" >> $backupReport
	echo "$now created" >> $backupReport
else 
	msg=""
	msg="Last backup: "$(basename $nameMin)
	if [[ $diffMin -le $expireTime ]]; then
		msg=$msg" is actual: created $diffMin days ago"
		echo $msg
		find $backupSrc/* -type d | while read j; do
			dest=$(echo $j | awk '{ print substr($1,19) }')
			mkdir -p $nameMin/$dest
		done
		find $backupSrc/* -type f | while read j; do
			dest=$(echo $j | awk '{ print substr($1,19) }')
			if [ -f $nameMin/$dest ]; then
				fileSizeOld=$(stat -c %s $j)
				fileSizeNew=$(stat -c %s $nameMin/$dest)
				let diffSize=$fileSizeOld-$fileSizeNew
				if [[ $diffSize -ne "0" ]]; then
					mv $nameMin/$dest $nameMin/$dest.$dateStart
					cp -v -f $j $nameMin/$dest > stderr
					echo "$existsFiles$nameMin'/'$dest' -> '$nameMin'/'$dest'.'$dateStart" >> ./.existsFiles
					echo "$j' -> '$nameMin'/'$dest" >> ./.existsFiles
				fi
			else
				cp -v -f $j $nameMin/$dest >> ./.newFiles
			fi
		done
		echo "-------------------------------------------------------" >> $backupReport
		echo $nameMin "has started to update" >> $backupReport
		echo "" >> $backupReport
		echo "New files:" >> $backupReport
		cat ./.newFiles >> $backupReport
		echo "" >> $backupReport
		echo "Updated files:" >> $backupReport
		cat ./.existsFiles >> $backupReport
		echo "" >> $backupReport
		echo "Backup Updated:" $nameMin >> $backupReport
	else
		msg=$msg" is not actual backup"
		echo $msg
		now=Backup-$(date "+%F")
		mkdir -p $backupDir/$now
		echo "$now created"
		echo "-------------------------------------------------------" >> $backupReport
		echo "$now created" >> $backupReport
		cp -r -f -v $backupSrc/* $backupDir/$now >> $backupReport	
	fi
fi
rm ./.newFiles ./.existsFiles
